import os
from dotenv import load_dotenv

load_dotenv()

# OpenAI配置
OPENAI_API_KEY = os.getenv('OPENAI_API_KEY')

# 支持的图片格式
SUPPORTED_IMAGE_FORMATS = {'.jpg', '.jpeg', '.png', '.webp', '.gif', '.heic', '.heif'}

# 图片识别提示词 - 优化为搜索友好的格式
VISION_PROMPT = """分析这张图片并生成搜索友好的描述。请按以下格式输出：

主要内容：[简短描述主体内容]
对象：[列出具体的物体、人物等，用空格分隔]
场景：[描述环境场所]
颜色：[主要颜色]
风格：[如现代、复古、卡通等]
文字：[如有文字内容则列出]
情感：[如快乐、宁静、热闹等]

要求：
1. 每个分类用简洁的关键词，避免完整句子
2. 优先使用常用搜索词汇
3. 用中文输出
4. 如某类别无内容可省略

示例：
主要内容：海边日落风景照
对象：太阳 海浪 沙滩 椰子树 情侣
场景：海滩 黄昏
颜色：橙色 金色 蓝色
风格：自然风光
情感：浪漫 宁静"""

# 屏幕截图专用识别提示词 - 专注准确提取所有文字内容和软件名称
SCREENSHOT_VISION_PROMPT = """仔细观察这张屏幕截图，准确提取其中的所有文字内容和软件信息。请按以下格式输出：

软件名称：[识别截图中的应用程序、网站或软件名称]
文字内容：[逐字逐句完整提取截图中的所有可见文字，包括菜单、按钮、标题、正文、用户名、数字、标点符号等一切文字]

关键要求：
1. 必须逐字准确提取，不能猜测或推断文字内容
2. 如果看不清楚的文字，宁可跳过也不要猜测
3. 保持原始文字的准确拼写和标点符号
4. 数字必须准确，包括逗号、小数点等格式
5. 用户名、时间等信息必须准确提取
6. 按空格分隔不同的文字内容
7. 只提取能确实看到的文字，不添加任何解释

示例：
软件名称：微信
文字内容：微信 通讯录 发现 我 张三 你好，我收到了 语音通话 视频通话 发送 表情 更多 10:30"""

# Spotlight索引的metadata字段
METADATA_FIELDS = {
    'description': 'ImageDescription',
    'comment': 'UserComment', 
    'subject': 'Subject',
    'keywords': 'Keywords'
}